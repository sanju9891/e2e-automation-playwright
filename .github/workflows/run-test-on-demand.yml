name: Run tests on demand

on:
  workflow_dispatch:
    inputs:
      test_branch:
        description: 'Test branch to run'
        required: true
        default: 'main'
        type: string
      test_env:
        description: 'Environment to run tests against'
        required: true
        default: 'staging'
        type: choice
        options:
          - development
          - staging
          - production
      test_type:
        description: 'Test type'
        required: true
        default: 'smoke-test'
        type: choice
        options:
          - api-test
          - e2e-test
          - visual-test
          - smoke-test
          - regression-test
      workers:
        description: 'Number of parallel workers'
        required: true
        default: 4
        type: string
      #slack_channel:
      #  description: 'Slack channel to send notifications'
      #  required: true
      #  default: '#jenkins-tests-prodtest'
      #  type: string

env:
  TEST_ENV: ${{ github.event.inputs.test_env || 'staging' }}
  TEST_TYPE: ${{ github.event.inputs.test_type || 'regression-test' }}
  TEST_BRANCH: ${{ github.event.inputs.test_branch || 'main' }}
  WORKERS: ${{ github.event.inputs.workers || '10' }}
  SLACK_CHANNEL: ${{ github.event.inputs.slack_channel || '#jenkins-tests-prodtest' }}

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to branch ${{ inputs.test_branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.test_branch }}

      - name: Notify slack job started
        if: always()
        uses: ./.github/actions/trigger-build-slack-noti
        with:
          test_env: ${{ env.TEST_ENV }}
          test_type: ${{ env.TEST_TYPE }}
          test_branch: ${{ env.TEST_BRANCH }}
          workers: ${{ env.WORKERS }}
          workflow_url: '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
          report_url: ${{ env.REPORT_URL }}
          actor: ${{ github.actor }}
          commit: ${{ github.event.pull_request.head.sha || github.sha }}
          slack_channel: ${{ env.SLACK_CHANNEL }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Get installed Playwright version
        id: playwright-version
        shell: bash
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install dependencies
        shell: bash
        run: npm ci

      - name: Install Playwright Browsers
        shell: bash
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Run Playwright tests
        run: |
          TEST_ENV=${{ inputs.test_env }} TEST_TYPE=${{ inputs.test_type }} WORKERS=${{ inputs.workers }} make test

      - name: Upload HTML test report
        uses: actions/upload-artifact@v4
        if: ${{ always() && !cancelled() }}
        with:
          name: playwright-report-${{ github.run_id }}
          path: playwright-report
          retention-days: 30

      - name: Publish Test Report
        run: |
          OUTPUT_FILE="ctrf-test-report-${{ github.run_id }}-${{ github.run_number }}.json"
          npx github-actions-ctrf playwright-report/$OUTPUT_FILE
        if: always()

      - name: Set report URL
        if: always()
        run: |
          echo "REPORT_URL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

      - name: Notify slack job completed
        if: always()
        uses: ./.github/actions/test-summary-slack-noti
        with:
          job_status: ${{ job.status }}
          report_url: ${{ env.REPORT_URL }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
